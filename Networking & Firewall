======================================================
                    Basic networking cmds
======================================================
ip...		-- network management , new one (ifconfig and route are depricated)
ping, arp, arping, traceroute, tracepath, nmap 		--Testing network
ss		-- monitoring network, netstat and  tcpdump are older 

Common files
------------------------------------------------------
/etc/networks			  --network name information
/etc/resolf.conf		-- resolver configuration file
/etc/hosts			    -- static name resoution with IP-name pairs
/etc/nsswitch.conf	-- name service switch configuration

Network Manager
-------------------------------------------------------
Service is NetworkManager.service
Tools:
-nmcli
-nmtui
Configuration files's location:
/etc/NetworkManager/*
/etc/sysconfig/network-scripts/*

SystemD Network
-------------------------------------------------------
Service is systemd-networkd.service
Tools:
-nnetworkctl
Configuration files's location:
/etc/networkr/*
/etc/systemd/network/*

Wicked(Suse)
-------------------------------------------------------
Service is wickedd.service
Tools:
-wicked
Configuration files's location:
/etc/wicked/*
/etc/sysconfig/network/*

Netplan (Ubuntu)
-------------------------------------------------------
-> after Ubuntu 16.04, but default since Ubuntu 17.10
- supports Network Manager and netwokd
- network structure is described as YAML
Configuration files's location:
/etc/netplan/*

Networking commands
-------------------------------------------------------
hostnamectl     -- controls system hostname
arp             --manipulate or display system ARP cache
arping          -- we can ping for MAC address within our network
!Ex. arping -c 4 192.168.1.1       -- ping MAC address with 4 packets

ip a                                --ip address show
hostnamectl set-hostname [name]     -- changes the hostnamectl with the new name

nmcli connection show               -- shows all available and working connecions

IP adding of network interface
--------------------------------------------------------
ip a add [ip address/subnet mask] dev [interface name]  --adds ip address to specified interface
nmcli connection add type ethernet ifname [interface name] con-name [shown interface name]
we have to stop and start the service IOT IP to be permanently available

Stopping network interface
--------------------------------------------------------
With nmcli: nmcli device disconnect [interface name]        --disconnects network interface
With nmtui

systemctl status NetworkManager     -- shows status of the NetworkManager
ls -al /etc/sysconfig/network-scripts/ifcfg             -- shows the configuration system files
[ip address/subnet mask] ipv4.method manual
nmcli connection modify [interface name] ipv4.address [ip address/subnet mask] ipv4.method manual

Starting network interface
--------------------------------------------------------
With nmcli: nmcli con up id [interface name]                --connects the network device
With nmtui

======================================================
                    Firewall
======================================================
Fedora distros are using firewalld


Firewalld
------------------------------------------------------
Firewalld is dynamically managed wirewall with support of zones
!!!Whenever we install service and check whether it is running on the system, don't forget to check whether the firewall permits the port that it's working with!!
!sudo firewall-cmd --add-service=[name] --permanent     -- adds a service permit in the firewall (the port is accepted in the server)
!sudo firewall-cmd --add-port=[port number]/[protocol] --permanent		-- adds firewall port
Managed through:
-firewalld-cmd				-- command line interface
-firewall-offline-cmd		-- special offline tool
-firewall-config			-- graphical application
Configuration files:
/etc/firewalld* and /usr/lib/firewalld/*

Firewalld cmds:
sudo firewall-cmd --state		--check if the firewall is running
firewall-cmd --get-zones		-- get firewall zones
firewall-cmd --get-default-zone		--check the defauld zone
sude firewall-cmd --set-default-zone=internal		--sets the default zone

firewall-cmd --get-services		--get firewall services
sudo firewall-cmd --add-service=http --permanent	-- add firewall service
sudo firewall-cmd --add-port=[port number]/[protocol] --permanent		  -- adds firewall port
!Ex. sudo firewall-cmd --add-port=22/tcp --permanent		              -- adding port 22 with tcp protocol
sudo firewall-cmd --reload		-- reload firewall configuration

Uncomplicated firewall (ufw)
------------------------------------------------------
The Uncomplicated Firewall is a frontend for iptables
Ufw provides a framework for managing netfilter and command-line interface for manipulating the firewall.
Managed through
-command line interface -ufw
Configuration files:
/etc/default/ufw and /etc/ufw/*

ufw commands:
sudo ufw status			-- check if firewall is running
sudo ufw status verbose		--shows extended firewall status
sudo ufw show listening		--reports ports that are in listening state tcp or open state for udp
sudo ufw show raw			-- complete firewall report
sudo ufw app list			-- List allowed applications
sudo ufw allow [port number]/[protocol]		-- allow port rule
sudo ufw allow OpenSSH comment 'allow ssh app'		-- allow application rule
sudo ufw reload			-- reload firewall configuration

=====================================================
dig +short myip.opendns.com @resolver1.opendns.com    --shows your public IP from Linux cmd line
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'"' '{ print $2}'    --same command
