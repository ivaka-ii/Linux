Linux is monolithic system, which runs its kernel to operate.
Linux is modular overall.

======================================================
                System components
======================================================
1. Boot loader          -- 
2. Boot manager         -- stand above boot loader, gives us choise which kernel should be loaded on the machine
3. Kernel               -- the core of the OS and manages the hardware
*Process - The running programs that the kernel manages.
*Kernel space - The area of the memory that only the kernel can access
*User space   - The main memory allocated by the kernel for user processes
======================================================
                User components
======================================================
1. Daemons              -- all the services that are running on the distribution
2. The Shell
3. Graphical Environment
4. User Applications

======================================================
            Docs & Guides       Support
======================================================
Linux distributions runs on modules. One module has multiple components.

======================================================
         Linux Graphical Environment
======================================================
- Display server(Xorg,XFree86,X11)          -- It is responsible for all I/O devices(keyboards, mouse and etc.)

- Display manager(GDM,KDM,XDM)(login manager)    -- responsible for user authentification sessions

- Window manager(WindowMaker, sawfish, fvwm)          -- responsible for window appearances

- Desktop manager(KDE,GNOME,XFCE)         -- responsible for desktop apearance

======================================================
         Security
======================================================
Two levels of security
1. Discretionary Access Control (DAC)
        - regular file access permissions
        - Access Control Lists (ACL)
2. Mandatory Access Control (MAC)
        - Typical examples - SELinux and AppArmor
Applied from Level 1 to Level 2

======================================================
          LINUX Paths
======================================================
1. Absolute path (starts with /)
    --calculated from the root of the file system tree
2. Relative path (no leading /)
    -- calculated from the current working directory

======================================================
          Standart File Descriptors
======================================================
#0 stdin        -- standart input
#1 stdout       -- standart output
#2 stderr       -- standart error

Redirection instructions are processed left to right
Ex.: $cat missing.txt > out.txt 2>&1
#different conmpared to
     $cat missin.txt 2>&1 > out.txt

======================================================
          COMMAND SEQUENCE
======================================================
Execute in order (disconnected)
    Sequence: command1; command2       -- with semicolumn both of the cmds are executed independetly

Execute in order (connected)
    Pipe: command1 | command2           -- command2 is executed is command1 is true
    
 Execute conditionally
    On Success: Command1 && command2    -- if command1 is 0, execute command2
    On Failure: command1 || command2    -- if command1 is error, execute command2
    
